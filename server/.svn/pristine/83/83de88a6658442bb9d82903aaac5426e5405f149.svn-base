using System;
using System.Collections.Generic;
using System.Text;
using Server.Factions;
using Server.Items;

namespace Server.Scripts.Custom.Citizenship
{
    public class TownBanner : Item
    {
        public TownBanner(int itemID) : base(itemID)
        {
        }

        public TownBanner(Serial serial) : base(serial)
        {

        }
        public override void  Serialize(GenericWriter writer)
        {
 	        base.Serialize(writer);
             writer.Write((int)0);
        }
        public override void  Deserialize(GenericReader reader)
        {
 	        base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }

    public class MilitiaRestrictedHat : BaseHat 
    {
        private Faction mMilitia;
        
        public MilitiaRestrictedHat(int itemID, Faction militia)
            : base(itemID)
        {
            mMilitia = militia;
        }

        public MilitiaRestrictedHat(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);

            Faction.WriteReference(writer, mMilitia);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();

            mMilitia = Faction.ReadReference(reader);
        }

        public override bool CanEquip(Mobile from)
        {
            Faction playerMilitia = Faction.Find(from);
            if (playerMilitia != mMilitia)
            {
                from.SendMessage("You must be a member of " + mMilitia.Definition.TownshipName + " militia to wear this item.");
                return false;
            }
            return base.CanEquip(from);
        }
    }

    [Flipable(0x15ED, 0x15EC)] 
    public class LillanoBanner : TownBanner 
    {
        [Constructable]
        public LillanoBanner() : base(0x15EC)
        {
            Hue = 0x4DF;
        }
        public LillanoBanner(Serial serial) : base(serial)
        {

        }
        public override void  Serialize(GenericWriter writer)
        {
 	        base.Serialize(writer);
             writer.Write((int)0);
        }
        public override void  Deserialize(GenericReader reader)
        {
 	        base.Deserialize(reader);
            int version = reader.ReadInt();
        }

    }

    [Flipable(0x15D4, 0x15D5)]
    public class PedranBanner : TownBanner
    {
        [Constructable]
        public PedranBanner() : base(0x15D4)
        {
            Hue = 0x538;
        }
        public PedranBanner(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }

    }

    [Flipable(0x15E0, 0x15E1)]
    public class CalorBanner : TownBanner
    {
        [Constructable]
        public CalorBanner() : base(0x15E0)
        {
            Hue = 0x5E3;
        }
        public CalorBanner(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }

    }
    [Flipable(0x15BD, 0x15BC)]
    public class VermellBanner : TownBanner
    {
        [Constructable]
        public VermellBanner() : base(0x15BC)
        {
            Hue = 0x4B9;
        }
        public VermellBanner(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }

    }
    [Flipable(0x15CC, 0x15CD)]
    public class ArborBanner : TownBanner
    {
        [Constructable]
        public ArborBanner() : base(0x15CC)
        {
            Hue = 0x58A;
        }
        public ArborBanner(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }

    }

    public class LillanoHood1 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public LillanoHood1()
            : base(0x3FFB, Faction.Find("Lillano"))
        {
            Hue = 0x4E6;
        }
        public LillanoHood1(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class LillanoHood2 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public LillanoHood2()
            : base(0x3FFC, Faction.Find("Lillano"))
        {
            Hue = MilitiaDyeHue.Lillano;
            Name = "Lillano Militia hood";
        }
        public LillanoHood2(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class PedranHood1 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public PedranHood1()
            : base(0x3FFB, Faction.Find("Pedran"))
        {
            Hue = 0x538;
        }
        public PedranHood1(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class PedranHood2 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public PedranHood2()
            : base(0x3FFC, Faction.Find("Pedran"))
        {
            Hue = MilitiaDyeHue.Pedran;
            Name = "Pedran Militia hood";
        }
        public PedranHood2(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class CalorHood1 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public CalorHood1()
            : base(0x3FFB, Faction.Find("Calor"))
        {
            Hue = 0x5E3;
        }
        public CalorHood1(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class CalorHood2 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public CalorHood2()
            : base(0x3FFC, Faction.Find("Calor"))
        {
            Hue = MilitiaDyeHue.Calor;
            Name = "Calor Militia hood";
        }
        public CalorHood2(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class VermellHood1 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public VermellHood1()
            : base(0x3FFB, Faction.Find("Vermell"))
        {
            Hue = 0x4B9;
        }
        public VermellHood1(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class VermellHood2 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public VermellHood2()
            : base(0x3FFC, Faction.Find("Vermell"))
        {
            Hue = MilitiaDyeHue.Vermell;
            Name = "Vermell Militia hood";
        }
        public VermellHood2(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class ArborHood1 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public ArborHood1()
            : base(0x3FFB, Faction.Find("Arbor"))
        {
            Hue = 0x58A;
        }
        public ArborHood1(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class ArborHood2 : MilitiaRestrictedHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public ArborHood2()
            : base(0x3FFC, Faction.Find("Arbor"))
        {
            Hue = MilitiaDyeHue.Arbor;
            Name = "Arbor Militia hood";
        }
        public ArborHood2(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class CitizenshipShield : BaseShield
    {

        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public virtual ICommonwealth Township { get { return null; } }

        [Constructable]
        public CitizenshipShield(int itemID)
            : base(itemID)
        {
            Weight = 7.0;
        }

        public CitizenshipShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }
    }

    public class ArborShield : CitizenshipShield
    {
        public override int LabelNumber
        {
            get
            {
                return 1063575;
            }
        }
        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public override ICommonwealth Township { get { return Commonwealth.Find("Arbor"); } }

        [Constructable]
        public ArborShield()
            : base(0x3B50)
        {
            Weight = 7.0;
        }

        public ArborShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }

    }

    public class CalorShield : CitizenshipShield
    {
        public override int LabelNumber
        {
            get
            {
                return 1063576;
            }
        }
        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public override ICommonwealth Township { get { return Commonwealth.Find("Calor"); } }

        [Constructable]
        public CalorShield()
            : base(0x3B51)
        {
            Weight = 7.0;
        }

        public CalorShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }
    }

    public class LillanoShield : CitizenshipShield
    {
        public override int LabelNumber
        {
            get
            {
                return 1063577;
            }
        }
        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public override ICommonwealth Township { get { return Commonwealth.Find("Lillano"); } }

        [Constructable]
        public LillanoShield()
            : base(0x3B52)
        {
            Weight = 7.0;
        }

        public LillanoShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }
    }

    public class PedranShield : CitizenshipShield
    {
        public override int LabelNumber
        {
            get
            {
                return 1063578;
            }
        }
        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public override ICommonwealth Township { get { return Commonwealth.Find("Pedran"); } }

        [Constructable]
        public PedranShield()
            : base(0x3B53)
        {
            Weight = 7.0;
        }

        public PedranShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }
    }

    public class VermellShield : CitizenshipShield
    {
        public override int LabelNumber
        {
            get
            {
                return 1063579;
            }
        }
        public override int InitMinHits { get { return 45; } }
        public override int InitMaxHits { get { return 60; } }

        public override int OldDexBonus { get { return -5; } }
        public override int ArmorBase { get { return 10; } }

        public override ICommonwealth Township { get { return Commonwealth.Find("Vermell"); } }

        [Constructable]
        public VermellShield()
            : base(0x3B54)
        {
            Weight = 7.0;
        }

        public VermellShield(Serial serial)
            : base(serial)
        {
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);

            int version = reader.ReadInt();
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);

            writer.Write((int)0);//version
        }

        public override bool OnEquip(Mobile from)
        {
            if (Commonwealth.Find(from) != Township)
                return false;

            return base.OnEquip(from);
        }
    }

    public class LillanoTownshipHood : BaseHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public LillanoTownshipHood()
            : base(0x3FFC)
        {
            Hue = CitizenDyeHue.Lillano;
            Name = "Lillano township hood";
        }
        public LillanoTownshipHood(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }

    }

    public class PedranTownshipHood : BaseHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public PedranTownshipHood()
            : base(0x3FFC)
        {
            Hue = CitizenDyeHue.Pedran;
            Name = "Pedran township hood";
        }
        public PedranTownshipHood(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }
    }
    public class CalorTownshipHood : BaseHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public CalorTownshipHood()
            : base(0x3FFC)
        {
            Hue = CitizenDyeHue.Calor;
            Name = "Calor township hood";
        }
        public CalorTownshipHood(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }
    }
    public class VermellTownshipHood : BaseHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public VermellTownshipHood()
            : base(0x3FFC)
        {
            Hue = CitizenDyeHue.Vermell;
            Name = "Vermell township hood";
        }
        public VermellTownshipHood(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }
    }
    public class ArborTownshipHood : BaseHat
    {
        public override int LabelNumber
        {
            get
            {
                return 1063522;
            }
        }
        [Constructable]
        public ArborTownshipHood()
            : base(0x3FFC)
        {
            Hue = CitizenDyeHue.Arbor;
            Name = "Arbor township hood";
        }
        public ArborTownshipHood(Serial serial)
            : base(serial)
        {

        }
        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0);
        }
        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
        public override bool Dye(Mobile from, DyeTub sender)
        {
            return false;
        }
    }
}

