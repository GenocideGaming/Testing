using System;
using Server;
using Server.Items;
using Server.Guilds;
using Server.Mobiles;
using Server.Gumps;
using Server.Scripts;

namespace Server.Misc
{
	public class Keywords
	{
		public static void Initialize()
		{
			// Register our speech handler
			EventSink.Speech += new SpeechEventHandler( EventSink_Speech );
		}

		public static void EventSink_Speech( SpeechEventArgs args )
		{
			Mobile from = args.Mobile;
			int[] keywords = args.Keywords;


            PlayerMobile pm = from as PlayerMobile;
			for ( int i = 0; i < keywords.Length; ++i )
			{
				switch ( keywords[i] )
				{
					case 0x002A: // *i resign from my guild*
					{
						if ( from.Guild != null )
							((Guild)from.Guild).RemoveMember( from );

						break;
					}
					case 0x0032: // *i must consider my sins*
					{
                        if (pm == null) { break; }

                        if (pm.Kills > 0 && pm.Bounty > 0)
                            from.SendMessage("You are wanted for the murder of {0} {1} and there is a bounty of {2} {3} upon your head.", 
                                             from.Kills, PluralizePerson(from.Kills), pm.Bounty, PluralizeGoldPieces(pm.Bounty));
                        else if (pm.Kills > 0 && pm.PlayerMurdererStatus == PlayerMobile.MurdererStatus.Parole && GetBribeCost(pm) <= 0)
                            from.SendMessage("You are wanted for the murder of {0} {1} but the bounty upon your head has been lifted.",
                                             from.Kills, PluralizePerson(from.Kills), GetBribeCost(pm));
                        else if (pm.Kills > 0 && pm.PlayerMurdererStatus == PlayerMobile.MurdererStatus.Parole)
                            from.SendMessage("You are wanted for the murder of {0} {1}, it would take {2} gp to escape the consequences of your bounty.",
                                             from.Kills, PluralizePerson(from.Kills), GetBribeCost(pm));
                        else if (pm.Kills > 0)
                            from.SendMessage("You are wanted for the murder of {0} {1}.", from.Kills, PluralizePerson(from.Kills));
                        else
                            from.SendMessage("You are innocent.");
						break;
					}
				}
			}
            if (pm != null && pm.PlayerMurdererStatus == PlayerMobile.MurdererStatus.Parole 
                && Insensitive.StartsWith(args.Speech, "i wish to continue killing")) {
                    pm.PlayerMurdererStatus = PlayerMobile.MurdererStatus.Outcast;
                    pm.SendMessage("You are now an outcast of Atria. You may attack innocents again, but BE WARNED: If you are bounty hunted again, you will suffer a PERMANENT 50% stat loss!");
            }
		}

        private static string PluralizeGoldPieces(int p)
        {
            if (p == 1)
                return "gold piece";
            else
                return "gold pieces";
        }

        private static string PluralizePerson(int p)
        {
            if (p == 1)
                return "person";
            else
                return "people";
        }
        public static int GetBribeCost(PlayerMobile player) 
        {
            if (player.BountyParoleExpiration == TimeSpan.MinValue)
            {
                return 0; // prevents an "overflow error" in the case that they paid off the whole bribe and then say "i must consider my sins"
            }
            TimeSpan timeRemaining = player.BountyParoleExpiration - player.GameTime;
            return (int)(timeRemaining.TotalHours * FeatureList.MurderSystem.BribeForRemovingOneHourOfParole);
        }
	}
}