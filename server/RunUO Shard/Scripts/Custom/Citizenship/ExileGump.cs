
//////////////////////////////////////////////////////////////////////
// Automatically generated by Bradley's GumpStudio and roadmaster's 
// exporter.dll,  Special thanks goes to Daegon whose work the exporter
// was based off of, and Shadow wolf for his Template Idea.
//////////////////////////////////////////////////////////////////////

using System;
using Server;
using Server.Gumps;
using Server.Network;
using Server.Commands;
using Server.Scripts.Custom.Citizenship;
using Server.Mobiles;
using Server.Targeting;

namespace Server.Gumps
{
    public class ExileGump : Gump
    {
        Mobile caller;
        ICommonwealth mCommonwealth;

        public static void Initialize()
        {
            CommandSystem.Register("ExileList", AccessLevel.Player, new CommandEventHandler(OnCommand_ExileGump));
        }

        public static void OnCommand_ExileGump(CommandEventArgs e)
        {
            PlayerMobile pm = e.Mobile as PlayerMobile;
            if (pm != null)
            {
                if (pm.CitizenshipPlayerState != null)
                {
                    if (pm.CitizenshipPlayerState.Commonwealth != null)
                        pm.SendGump(new ExileGump(e.Mobile, pm.CitizenshipPlayerState.Commonwealth));
                }
            }
        }

        public ExileGump(Mobile from, ICommonwealth commonwealth)
            : base(0, 0)
        {
            caller = from;
            mCommonwealth = commonwealth;

            this.Closable=true;
			this.Disposable=true;
			this.Dragable=true;
			this.Resizable=false;

			AddPage(0);
			AddImageTiled(0, 0, 21, 21, 30089);
			AddBackground(0, 0, 282, 490, 9250);
			AddLabel(90, 14, 0, @"Exile Information");
			AddLabel(15, 44, 0, @"Exile credits");
			AddLabel(155, 44, 0, mCommonwealth.State.ExileCredits.ToString() + "/"+ mCommonwealth.State.AvailablePoints);
			AddLabel(15, 66, 0, @"Current exile count");
			AddLabel(155, 66, 0, mCommonwealth.State.ExileList.Count.ToString());
            if (mCommonwealth.IsMinister(caller))
            {
                AddButton(15, 88, 1210, 1209, (int)Buttons.Button1, GumpButtonType.Reply, 0);
                AddLabel(32, 85, 0, @"Add an exile");
                AddButton(15, 110, 1210, 1209, (int)Buttons.Button2, GumpButtonType.Reply, 0);
                AddLabel(32, 107, 0, @"Add exile credit");
            }
			AddLabel(115, 140, 0, @"Exiles");

            bool twopages = false;
            if(mCommonwealth.State.ExileList.Count > 10)
                twopages = true;
            int yOffset = 140;
            int buttonID = 3; //we already have 2 buttons (and 0 is close gump)
            for (int i = 0; i < mCommonwealth.State.ExileList.Count; i++)
			{
                int x = twopages && i > 10 ? 220 : 15;
			    AddLabel(x, i * 20 + yOffset, 0, mCommonwealth.State.ExileList[i].Name);
			}
            
            
        }

        		public enum Buttons
		{
			Button1 = 1,
            Button2 = 2
		}


        public override void OnResponse(NetState sender, RelayInfo info)
        {
            Mobile from = sender.Mobile;

            switch(info.ButtonID)
            {
                case (int)Buttons.Button1:
				{
                    from.Target = new ExileTarget(mCommonwealth);
                    from.CloseGump(typeof(ExileGump));
					break;
				}
                case (int)Buttons.Button2:
                {
                    mCommonwealth.AddExileCredit();
                    from.CloseGump(typeof(ExileGump));
                    from.SendGump(new ExileGump(from, mCommonwealth));
                    break;
                }
            }
        }

        private class ExileTarget : Target
        {
            private ICommonwealth mCommonwealth;

            public ExileTarget(ICommonwealth commonwealth) : base(15, false, TargetFlags.None) 
            {
                mCommonwealth = commonwealth;
            }

            protected override void OnTarget(Mobile from, object targeted)
            {
                base.OnTarget(from, targeted);

                if (targeted is Mobile)
                {
                    bool succeded = mCommonwealth.AddExile(targeted as Mobile);
                    if (!succeded)
                    {
                        from.SendMessage("That player cannot be made an exile of your township.");
                    }
                }
            }
        }
    }
}